本项目中有一个sqlite数据库，名字为monitor.db，在monitor.db中有一个RcvData的表，表中有4个字段，第1个字段id是一个自增的唯一字段，第2个字段DtuNo是一个文本字段，第3个字段RcvTime是一个文本字段，第4个字段Rcvdata是一个文本字段。在本Demo.js文件中实现将监听端口接收到的数据包原始数据保存到这个Sqlite数据库的RcvData表中，实现增删改查的功能。其中查询到的数据库中的数据变为json格式，便于后期给前端使用。

在本Demo.js文件中实现开放端口，实现一个web api接口，便于前端项目的调用。通过前端项目的api接口调用，实现对sqlite数据库的增删改查，查询到的数据格式为json。

前端通过这个web api接口，给某个DTU号发一个继电器的控制命令，比如“ON”或者“OFF”，给后端（本项目），则后端收到继电器的控制命令后，通过监听端口8888给对应的DTU号设备发送MODBUS协议的写（功能码06）指令，比如后端收到前端发过来的控制某个DTU号的“ON”命令后，则马上通过监听端口8888给对应的DTU号设备发送闭合继电器的命令020602C50001（后面补上CRC校验），其中02是设备地址，06是MODBUS功能码，02C5是要写入的地址，0001是写入的数值。如果后端收到前端发过来的控制某个DTU号的“OFF”命令后，则马上通过监听端口8888给对应的DTU号设备发送断开继电器的命令020602C50000（后面补上CRC校验），其中02是设备地址，06是MODBUS功能码，02C5是要写入的地址，0000是写入的数值。后面都要补上CRC校验。